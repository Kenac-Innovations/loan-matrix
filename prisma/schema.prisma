generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id                     String                  @id @default(cuid())
  name                   String
  slug                   String                  @unique
  domain                 String?
  settings               Json?
  isActive               Boolean                 @default(true)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  communicationTemplates CommunicationTemplate[]
  leads                  Lead[]
  leadCommunications     LeadCommunication[]
  leadDocuments          LeadDocument[]
  pipelineStages         PipelineStage[]
  slaConfigs             SLAConfig[]
  teams                  Team[]
  validationRules        ValidationRule[]

  @@index([slug])
  @@index([isActive])
}

model PipelineStage {
  id                 String            @id @default(cuid())
  tenantId           String
  name               String
  description        String?
  order              Int
  color              String            @default("#3b82f6")
  isActive           Boolean           @default(true)
  isInitialState     Boolean           @default(false)
  isFinalState       Boolean           @default(false)
  allowedTransitions String[]
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  leadsInThisStage   Lead[]            @relation("LeadCurrentStage")
  tenant             Tenant            @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  slaConfigs         SLAConfig[]
  transitionsFrom    StateTransition[] @relation("TransitionFromStage")
  transitionsTo      StateTransition[] @relation("TransitionToStage")
  validationRules    ValidationRule[]

  @@unique([tenantId, name])
  @@unique([tenantId, order])
  @@index([tenantId, isActive])
  @@index([tenantId, order])
}

model Lead {
  id                       String              @id @default(cuid())
  createdAt                DateTime            @default(now())
  updatedAt                DateTime            @updatedAt
  status                   String              @default("DRAFT")
  closedReason             String?
  officeId                 Int?
  officeName               String?
  legalFormId              Int?
  legalFormName            String?
  externalId               String?
  firstname                String?
  middlename               String?
  lastname                 String?
  dateOfBirth              DateTime?
  gender                   String?
  genderId                 Int?
  isStaff                  Boolean             @default(false)
  mobileNo                 String?
  countryCode              String?             @default("+1")
  emailAddress             String?
  clientTypeId             Int?
  clientTypeName           String?
  clientClassificationId   Int?
  clientClassificationName String?
  submittedOnDate          DateTime?
  active                   Boolean             @default(true)
  activationDate           DateTime?
  openSavingsAccount       Boolean             @default(false)
  savingsProductId         Int?
  savingsProductName       String?
  clientId                 Int?
  resourceId               Int?
  userId                   String
  currentStep              Int                 @default(1)
  lastModified             DateTime            @default(now())
  currentStageId           String?
  stateContext             Json?
  stateMetadata            Json?
  tenantId                 String
  accountNumber            String?
  annualIncome             Float?
  bankName                 String?
  collateralType           String?
  collateralValue          Float?
  creditScore              Int?
  employerName             String?
  employmentStatus         String?
  existingLoans            Int?                @default(0)
  loanPurpose              String?
  loanTerm                 Int?
  monthlyExpenses          Float?
  monthlyIncome            Float?
  requestedAmount          Float?
  riskAssessedBy           String?
  riskAssessmentDate       DateTime?
  riskCategory             String?
  riskFactors              String[]            @default([])
  riskScore                Int?
  totalDebt                Float?              @default(0)
  yearsEmployed            Float?
  businessOwnership        Boolean?            @default(false)
  businessType             String?
  hasExistingLoans         Boolean?            @default(false)
  monthlyDebtPayments      Float?
  monthlyIncomeRange       String?
  propertyOwnership        String?
  yearsAtCurrentJob        String?
  familyMembers            FamilyMember[]
  currentStage             PipelineStage?      @relation("LeadCurrentStage", fields: [currentStageId], references: [id])
  tenant                   Tenant              @relation(fields: [tenantId], references: [id])
  communications           LeadCommunication[]
  documents                LeadDocument[]
  stateTransitions         StateTransition[]

  @@index([tenantId, userId])
  @@index([tenantId, status])
  @@index([tenantId, currentStageId])
  @@index([userId])
  @@index([status])
}

model StateTransition {
  id          String         @id @default(cuid())
  leadId      String
  tenantId    String
  fromStageId String?
  toStageId   String
  event       String
  context     Json?
  triggeredBy String
  triggeredAt DateTime       @default(now())
  metadata    Json?
  fromStage   PipelineStage? @relation("TransitionFromStage", fields: [fromStageId], references: [id])
  lead        Lead           @relation(fields: [leadId], references: [id], onDelete: Cascade)
  toStage     PipelineStage  @relation("TransitionToStage", fields: [toStageId], references: [id])

  @@index([leadId])
  @@index([tenantId, triggeredAt])
  @@index([tenantId, event])
}

model ValidationRule {
  id              String         @id @default(cuid())
  tenantId        String
  pipelineStageId String?
  name            String
  description     String?
  conditions      Json
  actions         Json
  severity        String         @default("warning")
  enabled         Boolean        @default(true)
  order           Int            @default(0)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  pipelineStage   PipelineStage? @relation(fields: [pipelineStageId], references: [id], onDelete: Cascade)
  tenant          Tenant         @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId, enabled])
  @@index([tenantId, pipelineStageId])
}

model SLAConfig {
  id                String        @id @default(cuid())
  tenantId          String
  pipelineStageId   String
  name              String
  description       String?
  timeframe         Int
  timeUnit          String
  escalationRules   Json
  notificationRules Json
  enabled           Boolean       @default(true)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  pipelineStage     PipelineStage @relation(fields: [pipelineStageId], references: [id], onDelete: Cascade)
  tenant            Tenant        @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId, pipelineStageId])
  @@index([tenantId, enabled])
}

model Team {
  id               String       @id @default(cuid())
  tenantId         String
  name             String
  description      String?
  pipelineStageIds String[]
  isActive         Boolean      @default(true)
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  tenant           Tenant       @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  members          TeamMember[]

  @@unique([tenantId, name])
  @@index([tenantId, isActive])
}

model TeamMember {
  id          String   @id @default(cuid())
  teamId      String
  userId      String
  name        String
  email       String
  role        String
  permissions Json?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  team        Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([teamId, userId])
  @@index([teamId, isActive])
  @@index([userId])
}

model FamilyMember {
  id           String    @id @default(cuid())
  firstname    String
  lastname     String
  middlename   String?
  relationship String
  dateOfBirth  DateTime?
  mobileNo     String?
  emailAddress String?
  isDependent  Boolean   @default(false)
  leadId       String
  lead         Lead      @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId])
}

model LeadDocument {
  id           String    @id @default(cuid())
  leadId       String
  tenantId     String
  name         String
  originalName String
  type         String
  size         Int
  category     String
  status       String    @default("pending")
  filePath     String?
  mimeType     String?
  uploadedBy   String
  verifiedBy   String?
  verifiedAt   DateTime?
  notes        String?
  metadata     Json?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  lead         Lead      @relation(fields: [leadId], references: [id], onDelete: Cascade)
  tenant       Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([tenantId])
  @@index([category])
  @@index([status])
}

model LeadCommunication {
  id          String    @id @default(cuid())
  leadId      String
  tenantId    String
  type        String
  direction   String
  subject     String?
  content     String
  status      String    @default("sent")
  scheduledAt DateTime?
  sentAt      DateTime?
  deliveredAt DateTime?
  readAt      DateTime?
  fromEmail   String?
  toEmail     String?
  fromPhone   String?
  toPhone     String?
  provider    String?
  providerId  String?
  metadata    Json?
  attachments Json?
  createdBy   String
  assignedTo  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lead        Lead      @relation(fields: [leadId], references: [id], onDelete: Cascade)
  tenant      Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([tenantId])
  @@index([type])
  @@index([direction])
  @@index([status])
  @@index([createdAt])
  @@index([scheduledAt])
}

model CommunicationTemplate {
  id          String   @id @default(cuid())
  tenantId    String
  name        String
  description String?
  type        String
  category    String
  subject     String?
  content     String
  variables   Json?
  isActive    Boolean  @default(true)
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tenant      Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId])
  @@index([type])
  @@index([category])
  @@index([isActive])
}

model Office {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LegalForm {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Gender {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ClientType {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ClientClassification {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SavingsProduct {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  interestRate Float    @default(0)
  minBalance   Float    @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model FineractDocument {
  id           String   @id @default(cuid())
  title        String
  content      String
  documentType String
  fineractId   String?
  metadata     Json?
  embedding    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([fineractId, documentType])
  @@index([documentType])
  @@index([fineractId])
}

model FineractDataCache {
  id          String   @id @default(cuid())
  endpoint    String
  entityId    String?
  data        Json
  embedding   String?
  lastUpdated DateTime @default(now())
  expiresAt   DateTime

  @@index([endpoint])
  @@index([entityId])
  @@index([expiresAt])
}

model ChatSession {
  id          String        @id @default(cuid())
  userId      String
  sessionData Json?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  messages    ChatMessage[]

  @@index([userId])
}

model ChatMessage {
  id           String      @id @default(cuid())
  sessionId    String
  role         String
  content      String
  fineractData Json?
  sources      Json?
  createdAt    DateTime    @default(now())
  session      ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
}

model QueryLog {
  id               String   @id @default(cuid())
  userId           String
  userQuery        String
  fineractDataUsed Json?
  response         String
  responseTime     Int
  timestamp        DateTime @default(now())

  @@index([userId])
  @@index([timestamp])
}

model UssdLoanApplication {
  id                      String    @id @default(cuid())
  tenantId                String
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  loanApplicationUssdId   Int       @unique
  messageId               String    @unique
  referenceNumber         String    @unique
  userPhoneNumber         String
  loanMatrixClientId      Int?
  userFullName            String
  userNationalId          String
  loanMatrixLoanProductId Int
  loanProductName         String
  loanProductDisplayName  String
  principalAmount         Float
  loanTermMonths          Int
  payoutMethod            String
  mobileMoneyNumber       String?
  mobileMoneyProvider     String?
  branchName              String?
  officeLocationId        Int?
  bankAccountNumber       String?
  bankName                String?
  bankBranch              String?
  status                  String    @default("CREATED")
  source                  String    @default("USSD")
  channel                 String    @default("USSD_LOAN_APPLICATION")
  queuedAt                DateTime  @default(now())
  processedAt             DateTime?
  processingNotes         String?
  rejectionReason         String?
  approvalNotes           String?
  paymentStatus           String?
  loanMatrixPaymentMethodId Int?

  @@index([tenantId, status])
  @@index([tenantId, createdAt])
  @@index([messageId])
  @@index([referenceNumber])
  @@index([userPhoneNumber])
  @@index([status, createdAt])
}
